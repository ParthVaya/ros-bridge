<!-- -->
<launch>

  <!-- CARLA connection -->
  <arg name='host' default='localhost'/>
  <arg name='port' default='2000'/>
  <arg name='timeout' default='10'/>

  <!-- Ego vehicle -->
  <arg name='role_name' default='ego_vehicle'/>
  <arg name="vehicle_filter" default='micro'/>
  <arg name="spawn_point" default=""/><!-- use comma separated format "x,y,z,roll,pitch,yaw" -->

  <!-- Map to load on startup (either a predefined CARLA town (e.g. 'Town01'), or a OpenDRIVE map file) -->
  <arg name="town" default=''/>

  <!-- Enable/disable passive mode -->
  <arg name='passive' default=''/>

  <!-- Synchronous mode-->
  <arg name='synchronous_mode_wait_for_vehicle_control_command' default='False'/>
  <arg name='fixed_delta_seconds' default='0.05'/>
  <arg name='synchronous_mode' default='False'/>  


  <include file="$(find carla_ros_bridge)/launch/carla_ros_bridge.launch">
    <arg name='host' value='$(arg host)'/>
    <arg name='port' value='$(arg port)'/>
    <arg name='town' value='$(arg town)'/>
    <arg name='timeout' value='$(arg timeout)'/>
    <arg name='passive' value='$(arg passive)'/>
    <arg name='synchronous_mode_wait_for_vehicle_control_command' value='$(arg synchronous_mode_wait_for_vehicle_control_command)'/>
    <arg name='synchronous_mode' value='$(arg synchronous_mode)'/>
    <arg name='fixed_delta_seconds' value='$(arg fixed_delta_seconds)'/>
  </include>

  <!-- the ego vehicle, that will be controlled by an agent (e.g. carla_ad_agent) -->
  <include file="$(find carla_spawn_objects)/launch/carla_example_ego_vehicle.launch">
    <arg name="objects_definition_file" value='$(find carla_spawn_objects)/config/objects.json'/>
    <arg name='role_name' value='$(arg role_name)'/>
    <arg name="spawn_point_ego_vehicle" value="$(arg spawn_point)"/>
    <arg name="spawn_sensors_only" value="false"/>
  </include>
  
    <group ns="planner">
        <remap from="openni_points" to="/voxel_cloud"/>
        <remap from="base_scan" to="/base_scan"/>
        <remap from="map" to="/rtabmap/projmap"/>
        <remap from="move_base_simple/goal" to="/move_base_simple/goal"/>
        
        <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    	 <rosparam file="$(find carla_ros_bridge)/launch/carla_costmap_common_params.yaml" command="load" ns="local_costmap" />
         <rosparam file="$(find carla_ros_bridge)/launch/carla_local_costmap_params.yaml" command="load" />
         <rosparam file="$(find carla_ros_bridge)/launch/carla_global_costmap_params.yaml" command="load" />
         <rosparam file="$(find carla_ros_bridge)/launch/carla_base_local_planner_params.yaml" command="load" />

	 <param name="base_local_planner" value="teb_local_planner/TebLocalPlannerROS" />
	 <param name="controller_frequency" value="40.0" />
	 
        </node> 
        
  </group>   
  
    <node pkg="imu_filter_madgwick" type="imu_filter_node" name="ImuFilter">
        <param name="use_mag" type="bool" value="false" />
        <param name="_publish_tf" type="bool" value="false" />
        <param name="_world_frame" type="string" value="enu" />
        <remap from="/imu/data_raw" to="/carla/ego_vehicle/imu"/>
    </node>   
    
        <include file="$(find carla_ros_bridge)/launch/rtabmap.launch">
        <arg name="gui_cfg" default="~/.ros/rtabmap_gui.ini" />
        <arg name="rviz_cfg" default="$(find carla_ros_bridge)/launch/move.rviz" />
        <arg name="args" value="--delete_db_on_start"/>
        <arg name="rgb_topic" value="/carla/ego_vehicle/rgb_front/image"/>
        <arg name="depth_topic" value="/carla/ego_vehicle/depth_front/image"/>
        <arg name="camera_info_topic" value="/carla/ego_vehicle/rgb_front/camera_info"/>
        <arg name="depth_camera_info_topic" value="/carla/ego_vehicle/depth_front/camera_info"/>
        <arg name="frame_id" value="ego_vehicle"/>        
        <arg name="map_frame_id" value="map2"/>
        <arg name="odom_topic" value="/carla/ego_vehicle/odometry"/>        
        <arg name="rtabmap_viz" value="false"/>
        <arg name="rviz" value="false"/>
     </include>
  
  <node pkg="carla_ros_bridge"
        name="carla_path_planning"
        type="carla_path_planning.py"
        output="screen"/>
        
 <!-- <node pkg="carla_ros_bridge"
	name="carla_obstacle_avoidance"
	type="carla_obstacle_avoidance.py"
	output="screen"/>      -->
	
  <node pkg="carla_ros_bridge"
        name="carla_steering_brake"
        type="carla_steering_brake.py"
        output="screen"/>

</launch>
